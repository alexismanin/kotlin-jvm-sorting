/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package fr.amanin.misc.sorting

import java.util.Arrays
import kotlin.IntArray
import kotlin.random.Random
import org.openjdk.jmh.annotations.*

@Warmup(iterations = 5, time = 5)
@Measurement(iterations = 5, time = 5)
@State(Scope.Benchmark)
class SortIntegers {

    @Param("100", "1000", "10000", "500000")
    var size : Int = -1

    private lateinit var bucket : IntArray

    @Setup
    fun fillRandomBucket() {
        bucket = IntArray(size) { Random.nextInt() }
    }

    @Benchmark
    fun javaSequentialStream() {
        Arrays.stream(bucket).sorted().toArray();
    }

    @Benchmark
    fun javaParallelStream() {
        Arrays.stream(bucket).parallel().sorted().toArray();
    }

    @Benchmark
    fun kotlinSequence() {
        bucket.asSequence().sorted().last()
    }

    @Benchmark
    fun collectKotlinSequenceThenSortInplace() {
        bucket.asSequence().toList().sorted()
    }

    @Benchmark
    fun kotlinSortInplace() {
        bucket.sort()
    }
    
    @Benchmark
    fun javaSortInPlace() {
        Arrays.sort(bucket)
    }
}
